{"version":3,"sources":["components/SearchBar.js","apis/utube.js","components/VideoItem.js","components/VideoList.js","components/VideoDetail.js","components/App.js","index.js"],"names":["SearchBar","state","term","onInputChange","event","setState","target","value","onFormSubmit","preventDefault","props","className","onSubmit","this","type","onChange","React","Component","axios","create","baseURL","params","part","maxResults","key","VideoItem","video","onVideoSelect","style","border","onClick","alt","snippet","title","src","thumbnails","medium","url","VideoList","videos","renderedList","map","id","videoId","VideoDetail","videoSrc","description","App","selectedVideo","onTermSubmit","a","utube","get","q","response","data","items","ReactDOM","render","document","querySelector"],"mappings":"uPAkCeA,E,4MA9BXC,MAAQ,CAAEC,KAAM,I,EAEhBC,cAAgB,SAACC,GACb,EAAKC,SAAS,CAAEH,KAAME,EAAME,OAAOC,S,EAGvCC,aAAe,SAACJ,GACZA,EAAMK,iBACN,EAAKC,MAAMF,aAAa,EAAKP,MAAMC,O,4CAGvC,WACI,OACI,qBAAKS,UAAY,yBAAjB,SACI,sBAAMC,SAAUC,KAAKL,aAAcG,UAAU,WAA7C,SACI,sBAAKA,UAAU,QAAf,UACI,4DACA,uBACIG,KAAK,OACLP,MAAOM,KAAKZ,MAAMC,KAClBa,SAAUF,KAAKV,2B,GAtBnBa,IAAMC,W,QCCfC,E,OAAAA,EAAMC,OAAO,CAExBC,QAAS,wCACTC,OAAQ,CACJC,KAAM,UACNC,WAAY,GACZC,IARI,6CCWGC,G,MAVG,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,cACxB,OACI,sBAAKC,MAAO,CAACC,OAAO,iBAAmBC,QAAS,kBAAIH,EAAcD,IAAQf,UAAU,kBAApF,UACI,qBAAMoB,IAAKL,EAAMM,QAAQC,MAAOtB,UAAU,WAAYuB,IAAKR,EAAMM,QAAQG,WAAWC,OAAOC,MAC3F,qBAAK1B,UAAU,UAAf,SACI,qBAAKA,UAAU,SAAf,SAAyBe,EAAMM,QAAQC,eCexCK,EAbG,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,OAASZ,EAAoB,EAApBA,cAEpBa,EAAeD,EAAOE,KAAI,SAACf,GAC7B,OAAO,cAAC,EAAD,CAECC,cAAeA,EACfD,MAAOA,GAFFA,EAAMgB,GAAGC,YAK1B,OAAO,qBAAOhC,UAAU,0BAAjB,SAA6C6B,KCKzCI,EArBK,SAAC,GAAa,IAAZlB,EAAW,EAAXA,MAElB,IAAKA,EACD,OAAO,wBAEX,IAAMmB,EAAQ,wCAAoCnB,EAAMgB,GAAGC,SAE3D,OACI,gCACI,qBAAKhC,UAAU,WAAf,SACI,wBAAQsB,MAAM,cAAeC,IAAKW,MAItC,sBAAKlC,UAAU,aAAf,UACI,oBAAIA,UAAU,YAAd,SAA2Be,EAAMM,QAAQC,QACzC,4BAAIP,EAAMM,QAAQc,qBCmCnBC,E,4MA9CX9C,MAAQ,CACJsC,OAAQ,GAAIS,cAAe,M,EAG/BC,a,uCAAe,WAAM/C,GAAN,eAAAgD,EAAA,sEAEaC,EAAMC,IAAI,UAAW,CACzC/B,OAAQ,CACJgC,EAAGnD,KAJA,OAELoD,EAFK,OAQX,EAAKjD,SAAS,CACVkC,OAAQe,EAASC,KAAKC,MACtBR,cAAeM,EAASC,KAAKC,MAAM,KAV5B,2C,wDAcf7B,cAAgB,SAAAD,GAEZ,EAAKrB,SAAS,CAAE2C,cAAetB,K,4CAInC,WACI,OACI,sBAAKE,MAAO,CAACC,OAAO,iBAAkBlB,UAAU,gBAAhD,UACI,cAAC,EAAD,CAAWH,aAAcK,KAAKoC,eAG9B,qBAAOtC,UAAU,UAAjB,SACI,sBAAMA,UAAU,SAAhB,UACI,qBAAMA,UAAU,qBAAhB,SACA,cAAC,EAAD,CAAae,MAAQb,KAAKZ,MAAM+C,kBAGhC,qBAAKrC,UAAU,mBAAf,SACA,cAAC,EAAD,CAAWgB,cAAed,KAAKc,cAAeY,OAAQ1B,KAAKZ,MAAMsC,uB,GAtCvEvB,IAAMC,WCFxBwC,IAASC,OACL,cAAC,EAAD,IAASC,SAASC,cAAc,Y","file":"static/js/main.88f8fbf6.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass SearchBar extends React.Component{\r\n\r\n    state = { term: '' };\r\n\r\n    onInputChange = (event) => {\r\n        this.setState({ term: event.target.value });\r\n        \r\n    };\r\n    onFormSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.props.onFormSubmit(this.state.term);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className = \"search-bar ui segment \"   >\r\n                <form onSubmit={this.onFormSubmit} className=\"ui form \">\r\n                    <div className=\"field\"   >\r\n                        <label>Search Youtube  Videos:</label>\r\n                        <input \r\n                            type=\"text\"\r\n                            value={this.state.term}\r\n                            onChange={this.onInputChange}\r\n                    /   >\r\n                    </div>\r\n                </form>\r\n                \r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default SearchBar;","import axios from 'axios';\r\nconst KEY = 'AIzaSyDetPegnPmjY8G3sFGfPp8-_7vPFt5M5FQ';\r\n\r\nexport default axios.create({\r\n\r\n    baseURL: 'https://www.googleapis.com/youtube/v3',\r\n    params: {\r\n        part: 'snippet',\r\n        maxResults: 10,\r\n        key:KEY\r\n    }\r\n\r\n})","import './VideoItem.css';\r\n\r\nconst VideoItem = ({ video, onVideoSelect }) => {\r\n    return (\r\n        <div style={{border:'3px solid red'}}  onClick={()=>onVideoSelect(video)} className=\"video-item item\">\r\n            <img  alt={video.snippet.title} className=\"ui image\"  src={video.snippet.thumbnails.medium.url}/>\r\n            <div className=\"content\">\r\n                <div className=\"header\">{video.snippet.title}</div>\r\n            </div>\r\n        </div> //video title\r\n);\r\n}\r\nexport default VideoItem;","import React from 'react';\r\nimport VideoItem from './VideoItem';\r\n\r\n// const VideoList = props => {\r\n//     return (\r\n//         <div>{props.videos.length}</div>\r\n//     )\r\n// }\r\n\r\nconst VideoList = ({ videos , onVideoSelect }) => {\r\n    // return <div>{videos.length}</div>\r\n    const renderedList = videos.map((video)=>{\r\n        return <VideoItem\r\n                key={video.id.videoId}\r\n                onVideoSelect={onVideoSelect}\r\n                video={video}\r\n            />;\r\n    })\r\n    return <div   className=\"ui relaxed divided list\">{ renderedList }</div> //return all videos\r\n   \r\n}\r\n\r\nexport default VideoList;","\r\n\r\nconst VideoDetail = ({video}) => {\r\n    // props.video--->video\r\n    if (!video) {\r\n        return <div></div>\r\n    }\r\n    const videoSrc = `https://www.youtube.com/embed/${video.id.videoId}`;\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"ui embed\">\r\n                <iframe title=\"videoPlayer\"  src={videoSrc} />\r\n            </div>\r\n\r\n\r\n            <div className=\"ui segment\">\r\n                <h4 className=\"ui header\">{video.snippet.title}</h4> \r\n                <p>{video.snippet.description}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default VideoDetail;","import React from 'react';\r\nimport SearchBar from './SearchBar';\r\nimport utube from '../apis/utube';\r\nimport VideoList from './VideoList';\r\nimport VideoDetail from './VideoDetail';\r\n\r\nclass App extends React.Component{\r\n    state = {\r\n        videos: [], selectedVideo: null\r\n    };\r\n\r\n    onTermSubmit = async term => {\r\n        // console.log(term);\r\n        const response =  await utube.get('/search', {\r\n            params: {\r\n                q: term\r\n            }\r\n            \r\n        });\r\n        this.setState({\r\n            videos: response.data.items,\r\n            selectedVideo: response.data.items[0]\r\n        }); // after requesting the data state will be changed\r\n    };\r\n\r\n    onVideoSelect = video => {\r\n        // console.log(video);\r\n        this.setState({ selectedVideo: video });\r\n        \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{border:'3px solid red'}} className=\"ui container \">\r\n                <SearchBar onFormSubmit={this.onTermSubmit}/>\r\n                {/* I have {this.state.videos.length} videos. */}\r\n                \r\n                <div   className=\"ui grid\">\r\n                    <div  className=\"ui row\">\r\n                        <div  className=\"eleven wide column\">\r\n                        <VideoDetail video={ this.state.selectedVideo}/>\r\n                        </div>\r\n\r\n                        <div className=\"five wide column\">\r\n                        <VideoList onVideoSelect={this.onVideoSelect} videos={this.state.videos} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}               \r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(\r\n    <App />, document.querySelector('#root')\r\n)"],"sourceRoot":""}